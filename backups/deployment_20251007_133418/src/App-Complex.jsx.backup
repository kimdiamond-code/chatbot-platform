import React, { useState, useEffect } from 'react';
import TestComponent from './components/TestComponent';
import Dashboard from './components/EnhancedDashboard';
import BotBuilder from './components/BotBuilder';
import LiveChat from './components/LiveChat';
import Analytics from './components/Analytics';
import Customers from './components/Customers';
import Integrations from './components/Integrations';
import Settings from './components/Settings';

const App = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [isMobile, setIsMobile] = useState(false);

  // Detect mobile screen size
  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    
    checkMobile();
    window.addEventListener('resize', checkMobile);
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  const navigation = [
    { id: 'dashboard', name: 'Dashboard', icon: '📊', component: Dashboard },
    { id: 'botbuilder', name: 'Bot Builder', icon: '🤖', component: BotBuilder },
    { id: 'livechat', name: 'Live Chat', icon: '💬', component: LiveChat },
    { id: 'analytics', name: 'Analytics', icon: '📈', component: Analytics },
    { id: 'customers', name: 'Customers', icon: '👥', component: Customers },
    { id: 'integrations', name: 'Integrations', icon: '🔗', component: Integrations },
    { id: 'settings', name: 'Settings', icon: '⚙️', component: Settings },
    { id: 'test', name: 'Test Status', icon: '🧪', component: TestComponent },
  ];

  const ActiveComponent = navigation.find(nav => nav.id === activeTab)?.component || Dashboard;

  // Modern Hamburger Button Component
  const ModernHamburgerButton = () => {
    const [isHovered, setIsHovered] = useState(false);
    
    return (
      <button
        onClick={() => setSidebarOpen(!sidebarOpen)}
        onMouseEnter={() => setIsHovered(true)}
        onMouseLeave={() => setIsHovered(false)}
        className={`
          group relative p-3 rounded-2xl transition-all duration-500 ease-out
          ${isHovered ? 'scale-105 shadow-2xl' : 'scale-100 shadow-lg'}
          ${sidebarOpen ? 'bg-blue-500' : 'bg-white/90'}
          backdrop-blur-md border border-white/20
          focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:ring-offset-2
          hover:rotate-1 active:scale-95
        `}
        style={{
          background: sidebarOpen 
            ? 'linear-gradient(135deg, rgba(59, 130, 246, 0.9), rgba(139, 92, 246, 0.9))'
            : 'rgba(255, 255, 255, 0.9)',
          backdropFilter: 'blur(16px)',
          filter: `saturate(${isHovered ? 1.2 : 1})`
        }}
      >
        {/* Enhanced Background Glow */}
        <div className={`
          absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500
          bg-gradient-to-r from-blue-500/20 via-purple-500/20 to-pink-500/20 blur-sm -z-10
        `} />

        {/* Hamburger Icon Container */}
        <div className="relative w-6 h-6 flex flex-col justify-center items-center">
          {/* Top Line */}
          <div 
            className={`
              w-5 h-0.5 rounded-full transition-all duration-500 ease-out transform-gpu
              ${sidebarOpen 
                ? 'rotate-45 translate-y-1.5 bg-white' 
                : isHovered 
                  ? 'w-6 bg-gray-800' 
                  : 'bg-gray-700'
              }
            `}
            style={{ transformOrigin: 'center' }}
          />
          
          {/* Middle Line */}
          <div 
            className={`
              w-5 h-0.5 rounded-full my-1 transition-all duration-300 ease-out transform-gpu
              ${sidebarOpen 
                ? 'opacity-0 scale-0 rotate-180' 
                : isHovered 
                  ? 'w-4 bg-gray-800' 
                  : 'bg-gray-700'
              }
            `}
          />
          
          {/* Bottom Line */}
          <div 
            className={`
              w-5 h-0.5 rounded-full transition-all duration-500 ease-out transform-gpu
              ${sidebarOpen 
                ? '-rotate-45 -translate-y-1.5 bg-white' 
                : isHovered 
                  ? 'w-6 bg-gray-800' 
                  : 'bg-gray-700'
              }
            `}
            style={{ transformOrigin: 'center' }}
          />
        </div>

        {/* Active State Indicator */}
        {sidebarOpen && (
          <div className="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse border-2 border-white" />
        )}
      </button>
    );
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 flex overflow-hidden">
      {/* Mobile Overlay */}
      {isMobile && sidebarOpen && (
        <div 
          className="fixed inset-0 z-50 md:hidden"
          style={{
            background: 'radial-gradient(circle at center, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.6) 100%)',
            backdropFilter: 'blur(8px)',
          }}
          onClick={() => setSidebarOpen(false)}
        >
          {/* Animated Background Pattern */}
          <div className="absolute inset-0 opacity-20">
            <div className="absolute top-10 left-10 w-32 h-32 bg-blue-500/20 rounded-full animate-pulse" />
            <div className="absolute top-1/3 right-10 w-24 h-24 bg-purple-500/20 rounded-full animate-pulse" style={{ animationDelay: '0.3s' }} />
            <div className="absolute bottom-1/4 left-1/4 w-20 h-20 bg-pink-500/20 rounded-full animate-pulse" style={{ animationDelay: '0.7s' }} />
          </div>
        </div>
      )}

      {/* Modern Sidebar */}
      <div 
        className={`
          ${isMobile 
            ? `fixed left-0 top-0 h-full w-80 z-50 transform transition-all duration-500 ease-out ${
                sidebarOpen ? 'translate-x-0' : '-translate-x-full'
              }`
            : `${sidebarOpen ? 'w-80' : 'w-20'} transition-all duration-500 ease-out`
          }
          relative overflow-hidden flex flex-col
        `}
        style={{
          background: `linear-gradient(135deg, 
            rgba(255, 255, 255, 0.95) 0%,
            rgba(255, 255, 255, 0.85) 50%,
            rgba(248, 250, 252, 0.9) 100%)`,
          backdropFilter: 'blur(16px) saturate(180%)',
          WebkitBackdropFilter: 'blur(16px) saturate(180%)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          boxShadow: `
            0 8px 32px rgba(31, 38, 135, 0.37),
            inset 0 1px 0 rgba(255, 255, 255, 0.5),
            inset 0 -1px 0 rgba(255, 255, 255, 0.2)
          `
        }}
        onClick={(e) => e.stopPropagation()}
      >
        {/* Enhanced Header with 3D Logo */}
        <div className="p-6 border-b border-white/20 relative z-10">
          <div className="flex items-center space-x-4">
            <div className="relative group">
              <div className="w-12 h-12 bg-gradient-to-br from-violet-500 via-purple-500 to-blue-500 rounded-2xl flex items-center justify-center shadow-lg ring-2 ring-white/20 transition-all duration-300 hover:scale-105 cursor-pointer">
                <span className="text-white text-xl font-bold">◆</span>
              </div>
              <div className="absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white animate-pulse"></div>
            </div>
            
            {(sidebarOpen || isMobile) && (
              <div className="flex-1 opacity-0 animate-pulse" style={{ animation: 'fadeIn 0.5s ease-out 0.2s forwards' }}>
                <h1 className="font-bold text-xl bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent">
                  AgentStack
                </h1>
                <div className="flex items-center space-x-2 mt-1">
                  <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                  <p className="text-sm text-gray-500 font-medium">v2.0 • Enhanced UI</p>
                  <div className="inline-block bg-gradient-to-r from-blue-500 to-purple-600 text-white text-xs font-bold px-2 py-1 rounded-full">
                    WOW
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Navigation Items */}
        <nav className="flex-1 p-4 space-y-3 relative z-10">
          {navigation.map((item, index) => (
            <button
              key={item.id}
              onClick={() => {
                setActiveTab(item.id);
                if (isMobile) setSidebarOpen(false);
              }}
              className={`
                w-full group relative overflow-hidden rounded-2xl transition-all duration-500 ease-out
                ${activeTab === item.id
                  ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-2xl scale-105 hover:scale-110'
                  : 'hover:bg-white/60 hover:shadow-xl hover:scale-102 text-gray-700'
                }
                focus:outline-none focus:ring-2 focus:ring-blue-500/50
              `}
              style={{
                animationDelay: `${index * 0.1}s`,
                boxShadow: activeTab === item.id 
                  ? '0 10px 30px rgba(59, 130, 246, 0.3)' 
                  : undefined
              }}
            >
              {/* Background Effects */}
              <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-600 opacity-0 group-hover:opacity-10 transition-opacity duration-500" />
              
              {/* Content */}
              <div className="relative p-4 flex items-center space-x-4 z-10">
                {/* Icon */}
                <div className={`relative flex items-center justify-center transition-all duration-500 ${
                  sidebarOpen || isMobile ? 'w-10 h-10' : 'w-8 h-8'
                }`}>
                  <span className={`text-2xl transition-all duration-500 ${
                    activeTab === item.id ? 'scale-110 rotate-12' : 'group-hover:scale-105'
                  }`}>
                    {item.icon}
                  </span>
                </div>
                
                {/* Label */}
                {(sidebarOpen || isMobile) && (
                  <div className="flex-1 text-left opacity-0" style={{ animation: 'slideIn 0.5s ease-out 0.1s forwards' }}>
                    <span className={`font-semibold transition-all duration-300 ${
                      activeTab === item.id ? 'text-white' : 'text-gray-800'
                    }`}>
                      {item.name}
                    </span>
                  </div>
                )}
              </div>
              
              {/* Active Indicator */}
              {activeTab === item.id && (
                <div className="absolute right-0 top-1/2 transform -translate-y-1/2 w-1 h-8 bg-white rounded-l-full shadow-lg animate-pulse" />
              )}
            </button>
          ))}
        </nav>

        {/* User Profile Section */}
        <div className="p-4 border-t border-white/10 relative z-10">
          {(sidebarOpen || isMobile) ? (
            <div className="bg-white/60 backdrop-blur-md rounded-2xl p-4 transition-all duration-300 hover:bg-white/80 hover:scale-102 cursor-pointer group">
              <div className="flex items-center space-x-3">
                <div className="relative">
                  <div className="w-12 h-12 bg-gradient-to-br from-indigo-400 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-lg shadow-lg ring-2 ring-white/20 transition-all duration-300 group-hover:scale-105">
                    K
                  </div>
                  <div className="absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white animate-pulse"></div>
                </div>
                <div className="flex-1">
                  <p className="font-semibold text-gray-900">Demo User</p>
                  <p className="text-sm text-gray-500">Administrator</p>
                </div>
                <button className="p-2 hover:bg-white/50 rounded-xl transition-all duration-300 hover:scale-110">
                  <span className="text-gray-400">⋮</span>
                </button>
              </div>
            </div>
          ) : (
            <button className="w-full p-2 hover:bg-white/20 rounded-xl transition-all duration-300 hover:scale-105 group">
              <div className="w-8 h-8 bg-gradient-to-br from-indigo-400 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-sm mx-auto transition-all duration-300 group-hover:scale-110">
                K
              </div>
            </button>
          )}
        </div>
      </div>

      {/* Main Content Area */}
      <div className="flex-1 flex flex-col overflow-hidden">
        {/* Modern Header */}
        <header 
          className="relative overflow-hidden"
          style={{
            background: `linear-gradient(135deg,
              rgba(255, 255, 255, 0.9) 0%,
              rgba(240, 248, 255, 0.8) 25%,
              rgba(245, 243, 255, 0.8) 50%,
              rgba(254, 240, 255, 0.8) 75%,
              rgba(255, 255, 255, 0.9) 100%)`,
            backdropFilter: 'blur(16px)',
            boxShadow: '0 8px 32px rgba(31, 38, 135, 0.37)'
          }}
        >
          {/* Floating orbs */}
          <div className="absolute top-4 right-20 w-16 h-16 bg-gradient-to-br from-blue-400/30 to-purple-500/30 rounded-full animate-pulse" style={{ filter: 'blur(1px)' }} />
          <div className="absolute bottom-2 left-32 w-12 h-12 bg-gradient-to-br from-pink-400/30 to-orange-500/30 rounded-full animate-pulse" style={{ filter: 'blur(1px)', animationDelay: '-2s' }} />
          
          <div className="relative px-6 py-4 z-10">
            <div className="flex items-center justify-between">
              {/* Left Section */}
              <div className="flex items-center space-x-4">
                <ModernHamburgerButton />
                
                {/* Status Indicators */}
                <div className="hidden md:flex items-center space-x-3 text-sm">
                  <span className="px-3 py-1 bg-white/60 backdrop-blur-md text-green-800 rounded-full font-medium transition-all duration-300 hover:scale-105 hover:bg-white/80 cursor-pointer">
                    🟢 System Online
                  </span>
                  <span className="text-gray-400 animate-pulse">•</span>
                  <div className="flex items-center space-x-2">
                    <span className="text-gray-600 font-medium">3 active chats</span>
                    <div className="w-2 h-2 bg-green-500 rounded-full animate-bounce"></div>
                  </div>
                </div>
              </div>

              {/* Center Section */}
              <div className="hidden lg:flex items-center space-x-3 text-sm text-gray-600 bg-white/60 backdrop-blur-md px-4 py-2 rounded-xl transition-all duration-300 hover:scale-105">
                <span className="text-xl animate-pulse">🕐</span>
                <span className="font-medium">{new Date().toLocaleTimeString()}</span>
              </div>

              {/* Right Section */}
              <div className="flex items-center space-x-4">
                {/* Quick Stats */}
                <div className="hidden md:flex items-center space-x-3 text-sm">
                  <div className="flex items-center space-x-2 px-3 py-1 bg-white/60 backdrop-blur-md text-blue-800 rounded-full transition-all duration-300 hover:scale-105 cursor-pointer">
                    <span className="animate-bounce">📊</span>
                    <span className="font-bold">4.7 ★</span>
                  </div>
                  <div className="flex items-center space-x-2 px-3 py-1 bg-white/60 backdrop-blur-md text-purple-800 rounded-full transition-all duration-300 hover:scale-105 cursor-pointer">
                    <span className="animate-pulse">⚡</span>
                    <span className="font-bold">2m</span>
                  </div>
                </div>

                {/* User Avatar */}
                <div className="relative group">
                  <button className="flex items-center space-x-3 p-2 hover:bg-white/50 rounded-2xl transition-all duration-500 hover:scale-105 bg-white/60 backdrop-blur-md">
                    <div className="text-right hidden sm:block">
                      <p className="font-semibold text-gray-900 text-sm">Welcome back!</p>
                      <p className="text-xs text-gray-500">Demo User</p>
                    </div>
                    <div className="relative">
                      <div className="w-10 h-10 bg-gradient-to-br from-violet-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold shadow-lg ring-2 ring-white/20 transition-all duration-300 group-hover:scale-110">
                        K
                      </div>
                      <div className="absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border border-white animate-pulse"></div>
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </header>

        {/* Page Content */}
        <main className="flex-1 overflow-y-auto bg-gradient-to-br from-white/50 via-blue-50/30 to-indigo-50/50">
          <div className="h-full relative">
            {/* Background Enhancement */}
            <div className="absolute inset-0 bg-gradient-to-br from-white/60 via-transparent to-blue-50/40 pointer-events-none" />
            
            {/* Content */}
            <div className="relative z-10">
              <ActiveComponent onNavigate={setActiveTab} />
            </div>
          </div>
        </main>
      </div>

      {/* CSS Animations */}
      <style jsx>{`
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(10px); }
          to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes slideIn {
          from { opacity: 0; transform: translateX(-20px); }
          to { opacity: 1; transform: translateX(0); }
        }
      `}</style>
    </div>
  );
};

export default App;